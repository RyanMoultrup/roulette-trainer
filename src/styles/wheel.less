@platesize: 325px; /* sets width and height */
@pitwidth: 30px; /* the width of each pit. 32 seems to work best */
@rotate: (360/@to)+0deg; /* how far to rotate each slice depends on how many slices you have */

@rimsize: 6px; /* size of the bevelled rim edge */
@trim: #B16938; /* or hex value */
@trimSecondary: silver; /* or hex value */
@spinButton: green; /* or hex value */
@resetButton: darkgreen; /* or hex value */

@spins: 8; /* the number of laps the ball spins before resting */

@from: 1;
@to: 37; /* number of slices (36 numbers plus zero) */
.loop(@index) when (@index < @to) {
  .wheel-number:nth-child(@{index}) {
    transform: rotateZ(@rotate*@index);
  }
  .loop(@index + 1);
}

.loop(@from);

.main {
  width: (@platesize+24);
  margin: 0 auto;
}

.plate {
  background-color: gray;
  width: @platesize;
  height: @platesize;
  margin: (@rimsize*2);
  border-radius: 50%;
  position: relative;
  animation: rotate 48s infinite linear;

  &:after,
  &:before {
    content: '';
    display: block;
    position: absolute;
    border-radius: 50%;
  }

  &:after {
    top: -@rimsize;
    right: -@rimsize;
    bottom: -@rimsize;
    left: -@rimsize;
    border: @rimsize solid @trim;
    box-shadow: inset 0px 0px 0px (@rimsize/3) darken(@trim, 15%),
    0px 0px 0px (@rimsize/3) lighten(@trim, 25%);

  }

  &:before {
    background: rgba(0, 0, 0, .65);
    border: 1px solid @trimSecondary;
    box-shadow: inset 0px 0px 0px 2px darken(@trimSecondary, 25%);
    top: 12%;
    left: 12%;
    right: 12%;
    bottom: 12%;
    z-index: 1;
  }
}

.wheel-number {
  width: @pitwidth;
  height: (@platesize/2);
  display: inline-block;
  text-align: center;
  position: absolute;
  top: 0;
  left: calc(50% - (@pitwidth / 2));
  transform-origin: 50% 100%;
  background-color: transparent;
  border-left: (@pitwidth/2) solid transparent;
  border-right: (@pitwidth/2) solid transparent;
  border-top: (@platesize/2) solid black;
  box-sizing: border-box;

  &:nth-child(odd) {
    border-top-color: #520703;
  }

  &:nth-child(@{to}) {
    border-top-color: green;
  }
}

.pit {
  color: #fff;
  padding-top: 12px;
  width: @pitwidth;
  display: inline-block;
  font-size: 12px;
  transform: scale(1, 1.8);
  position: absolute;
  top: -(@platesize/2);
  left: -(@pitwidth/2);
}

.inner {
  display: block;
  height: @platesize;
  width: @platesize;
  position: relative;

  &:after,
  &:before {
    content: '';
    display: block;
    position: absolute;
    border-radius: 50%;
  }

  &:after {
    z-index: 3;
    top: 24%;
    right: 24%;
    bottom: 24%;
    left: 24%;
    background-color: darken(@trimSecondary, 45%);
    border: 3px solid darken(@trimSecondary, 25%);
  }
}

@keyframes rotate {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(360deg);
  }
}

.wheel-data {
  display: block;
  position: absolute;
  top: 30%;
  right: 30%;
  bottom: 30%;
  left: 30%;
  border-radius: 50%;
  animation: rotate 48s reverse linear infinite;
  perspective: 2000px;
  z-index: 100;


  .data-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.72s;
    transform-style: preserve-3d;

  }

  &.reveal .data-inner {
    transform: rotateY(180deg);
  }

  .mask,
  .wheel-result {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    position: absolute;
    backface-visibility: hidden;
    border-radius: 50%;
    overflow: hidden;
    display: inline-block;
  }

  .mask {
    color: #fff;
    font-size: 24px;
    margin: auto;
    line-height: 1.4;
    padding-top: 36px;
  }

  .wheel-result {
    background-color: green;
    color: white;
    transform: rotateY(180deg);
    align-items: center;
    color: #fff;
  }

  .result-number {
    font-size: 61px;
    font-weight: 500;
    line-height: 1.2;
    margin-top: 18px;
  }

  .result-color {
    text-transform: uppercase;
    font-size: 13px;
    line-height: 1;
  }
}

.color-green {
  background-color: green;
}

.color-black {
  background-color: black;
}

.color-red {
  background-color: #B91C1C;
}

.visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

